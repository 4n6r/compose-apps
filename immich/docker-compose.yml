#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.105.1
    command: ['start.sh', 'immich']
    volumes:
      - immich_data:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME=${DB_USERNAME}
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich_redis
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
    restart: always

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:v1.105.1
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/hardware-transcoding
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    command: ['start.sh', 'microservices']
    volumes:
      - immich_data:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME=${DB_USERNAME}
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich_redis
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:v1.103.1
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME=${DB_USERNAME}
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich_redis
    restart: always

  redis:
    container_name: immich_redis
    image: registry.hub.docker.com/library/redis:7.2-alpine@sha256:a40e29800d387e3cf9431902e1e7a362e4d819233d68ae39380532c3310091ac
    restart: always

  database:
    container_name: immich_postgres
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: immich
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: "nfs"
      o: "nfsvers=4,addr=${SHAREIP},rw"
      device: ":${SHAREFOLDER}/immich_pgdata"
  model-cache:
    driver: local
    driver_opts:
      type: "nfs"
      o: "nfsvers=4,addr=${SHAREIP},rw"
      device: ":${SHAREFOLDER}/immich_model_cache"
  immich_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "nfsvers=4,addr=${SHAREIP},rw"
      device: ":${SHAREFOLDER}/immich_data"
